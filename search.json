[{"title":"graphQL基础","date":"2021-05-25T11:36:40.000Z","url":"/2021/05/25/graphQL%E5%9F%BA%E7%A1%80/","tags":[["graphQL","/tags/graphQL/"]],"categories":[["graphQL-basic","/categories/graphQL-basic/"]],"content":"graphQL 基础查询 3. graphQL基础31 查询 (server-side)Query 是一个关键字，代表一个操作类型 (operation type)。 所有查询的方法都必须在这个字段下， 返回值如果不是graphql的自带标量类型，那么就需要使用type来定义。 1.1 自带标量类型graphql自带标量类型为: Int, Float, String, Boolean, ID(unique). 那么返回值可以直接填这几个类型。 1.2 复杂/自定义类型如果为自定义类型，需要使用type关键字定义 当接收到query请求后，会根据操作名称，也就是查询方法来寻找对应的处理函数。 2. 处理函数处理方法就是普通的js函数，只不过命名，参数这些地方会有些要求。比如我们上面有一个getCompanyName的Query,返回值类型是company，那么我们的处理函数就可以是 3. 后端服务器搭建 express + express-graphql + graphql express: 后端服务器 express-graphql: graphql http server (用来解析， 比如收到一个query，如何根据你的schema来找到对应的函数，然后交给函数处理。 graphql是构建schema 3.1 包导入 buildSchema用来来构建schema,也就是刚刚写的那些请求,比如 type query{…}, 3.2 buildSchame 那么我们就定义好了，两个查询方法，一个getCompanyName,一个getCompanyInfo.这两个方法的返回值分别为String和Company复杂类型 3.3 处理函数 graphqlHTTP这三个参数，schema是接口定义，rootValue是处理函数入口，graphiql是测试界面，如果我们通过location:4000/graphql，就可以访问到测试页面 4 测试在测试页面, 可以用shorthand syntax来查询 "},{"title":"graphQL基础2","date":"2021-05-25T11:36:40.000Z","url":"/2021/05/25/graphQL%E5%9F%BA%E7%A1%802/","tags":[["graphQL","/tags/graphQL/"]],"categories":[["graphQL-basic","/categories/graphQL-basic/"]],"content":"graphQL 参数传递基础 4. 参数传递1.服务端1.1 返回值为列表[类型]数组，例如[Int]代表整数数组 1.2. !(叹号) 参数不能为空numDice是必须传参，null是不行的， numSides是可以不传入的。返回类型是number类型的数组 1.3 处理函数参数接收参数正常来说是会传入一个args的对象，这个对象是可以在接受的时候就进行解构的 1.4 嵌套参数传递我们在查询的时候，子属性也是可以有参数的. 上面这个例子就是我们在对用户信息进行查询时，他的返回值，我们是可以进行参数传递的。正常来说，我们的参数都要在通过传参传入，但是GraphQL可以允许你在选择返回值的时候进行传参。这个时候处理函数就要变成 1.4 综合例子 2 查询端"}]